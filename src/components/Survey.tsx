import React, { useState } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group";
import { Textarea } from "@/components/ui/textarea";
import { Button } from "@/components/ui/button";

interface SurveyProps {
  onSubmit?: (answer: string, customText?: string) => void;
}

const Survey: React.FC<SurveyProps> = ({ onSubmit }) => {
  const [selectedOption, setSelectedOption] = useState<string>("");
  const [customText, setCustomText] = useState<string>("");
  const [isSubmitted, setIsSubmitted] = useState<boolean>(false);

  const options = [
    { id: "rest", label: "–û—Ç–¥—ã—Ö –∏ –æ–±—â–µ–Ω–∏–µ" },
    { id: "sport", label: "–°–ø–æ—Ä—Ç –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏" },
    { id: "education", label: "–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∏ —Ä–∞–∑–≤–∏—Ç–∏–µ" },
    { id: "food", label: "–ï–¥–∞" },
    { id: "culture", label: "–ö—É–ª—å—Ç—É—Ä–Ω—ã–µ –∏ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è" },
    { id: "custom", label: "–°–≤–æ–π –≤–∞—Ä–∏–∞–Ω—Ç" },
  ];

  const handleSubmit = () => {
    if (
      !selectedOption ||
      (selectedOption === "custom" && !customText.trim())
    ) {
      return;
    }

    setIsSubmitted(true);
    onSubmit?.(
      selectedOption,
      selectedOption === "custom" ? customText : undefined,
    );
  };

  const handleCustomTextChange = (
    e: React.ChangeEvent<HTMLTextAreaElement>,
  ) => {
    const text = e.target.value;
    if (text.length <= 250) {
      setCustomText(text);
    }
  };

  if (isSubmitted) {
    return (
      <Card className="w-full max-w-2xl mx-auto animate-fade-in">
        <CardContent className="p-8 text-center">
          <div className="text-6xl mb-4">üéâ</div>
          <h2 className="text-2xl font-semibold text-gray-800 mb-2">
            –°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ!
          </h2>
          <p className="text-gray-600">
            –í–∞—à –æ—Ç–≤–µ—Ç —É—á—Ç—ë–Ω. –ú—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –≤—Å–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.
          </p>
        </CardContent>
      </Card>
    );
  }

  return (
    <Card className="w-full max-w-2xl mx-auto shadow-lg hover:shadow-xl transition-shadow duration-300">
      <CardHeader className="pb-6">
        <CardTitle className="text-2xl font-semibold text-gray-800 leading-relaxed">
          –ï—Å–ª–∏ –±—ã –±—ã–ª –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π —Ü–µ–Ω—Ç—Ä –¥–æ—Å—É–≥–∞, —á—Ç–æ –±—ã –≤–∞—Å –ø—Ä–∏–≤–ª–µ–∫–ª–æ —Ç—É–¥–∞
          –ø–æ–π—Ç–∏?
        </CardTitle>
      </CardHeader>

      <CardContent className="space-y-6">
        <RadioGroup value={selectedOption} onValueChange={setSelectedOption}>
          {options.map((option) => (
            <div
              key={option.id}
              className="flex items-center space-x-3 p-3 rounded-lg hover:bg-gray-50 transition-colors"
            >
              <RadioGroupItem value={option.id} id={option.id} />
              <label
                htmlFor={option.id}
                className="text-gray-700 cursor-pointer flex-1 font-medium"
              >
                {option.label}
              </label>
            </div>
          ))}
        </RadioGroup>

        {selectedOption === "custom" && (
          <div className="space-y-2 animate-fade-in">
            <Textarea
              placeholder="–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –≤–∞—Ä–∏–∞–Ω—Ç–æ–º..."
              value={customText}
              onChange={handleCustomTextChange}
              className="min-h-[100px] resize-none"
            />
            <div className="flex justify-between items-center text-sm">
              <span className="text-gray-500">–û–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–∞—Ä–∏–∞–Ω—Ç</span>
              <span
                className={`font-medium ${customText.length > 240 ? "text-red-500" : "text-gray-500"}`}
              >
                {customText.length}/250
              </span>
            </div>
          </div>
        )}

        <Button
          onClick={handleSubmit}
          disabled={
            !selectedOption ||
            (selectedOption === "custom" && !customText.trim())
          }
          className="w-full py-3 text-lg font-medium bg-purple-600 hover:bg-purple-700 transition-colors"
        >
          –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç
        </Button>
      </CardContent>
    </Card>
  );
};

export default Survey;
