import React, { useState } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group";
import { Textarea } from "@/components/ui/textarea";
import { Button } from "@/components/ui/button";
import { Progress } from "@/components/ui/progress";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";

interface SurveyProps {
  onSubmit?: (answer: string, customText?: string) => void;
}

const Survey: React.FC<SurveyProps> = ({ onSubmit }) => {
  const [selectedOption, setSelectedOption] = useState<string>("");
  const [customText, setCustomText] = useState<string>("");
  const [isSubmitted, setIsSubmitted] = useState<boolean>(false);
  const [activeTab, setActiveTab] = useState<string>("vote");

  const options = [
    { id: "rest", label: "–û—Ç–¥—ã—Ö –∏ –æ–±—â–µ–Ω–∏–µ" },
    { id: "sport", label: "–°–ø–æ—Ä—Ç –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏" },
    { id: "education", label: "–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∏ —Ä–∞–∑–≤–∏—Ç–∏–µ" },
    { id: "food", label: "–ï–¥–∞" },
    { id: "culture", label: "–ö—É–ª—å—Ç—É—Ä–Ω—ã–µ –∏ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è" },
    { id: "custom", label: "–°–≤–æ–π –≤–∞—Ä–∏–∞–Ω—Ç" },
  ];

  // –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
  const surveyResults = {
    totalVotes: 147,
    results: [
      { id: "rest", label: "–û—Ç–¥—ã—Ö –∏ –æ–±—â–µ–Ω–∏–µ", votes: 42, percentage: 28.6 },
      { id: "sport", label: "–°–ø–æ—Ä—Ç –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏", votes: 35, percentage: 23.8 },
      {
        id: "education",
        label: "–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∏ —Ä–∞–∑–≤–∏—Ç–∏–µ",
        votes: 31,
        percentage: 21.1,
      },
      { id: "food", label: "–ï–¥–∞", votes: 18, percentage: 12.2 },
      {
        id: "culture",
        label: "–ö—É–ª—å—Ç—É—Ä–Ω—ã–µ –∏ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è",
        votes: 12,
        percentage: 8.2,
      },
      { id: "custom", label: "–°–≤–æ–π –≤–∞—Ä–∏–∞–Ω—Ç", votes: 9, percentage: 6.1 },
    ],
    customAnswers: [
      "–ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã –ø–æ —Ä—É–∫–æ–¥–µ–ª–∏—é –∏ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤—É",
      "–ö–æ–≤–æ—Ä–∫–∏–Ω–≥ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã",
      "–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ —Å —Ç–∏—Ö–∏–º–∏ –∑–æ–Ω–∞–º–∏ –¥–ª—è —á—Ç–µ–Ω–∏—è",
      "–ò–≥—Ä–æ–≤–∞—è –∑–æ–Ω–∞ —Å –Ω–∞—Å—Ç–æ–ª—å–Ω—ã–º–∏ –∏–≥—Ä–∞–º–∏",
      "–ö–æ–Ω—Ü–µ—Ä—Ç—ã –∂–∏–≤–æ–π –º—É–∑—ã–∫–∏",
      "–õ–µ–∫—Ü–∏–∏ –∏ –¥–∏—Å–∫—É—Å—Å–∏–∏ –Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ç–µ–º—ã",
      "–ó–æ–Ω–∞ –¥–ª—è –º–µ–¥–∏—Ç–∞—Ü–∏–∏ –∏ –π–æ–≥–∏",
      "–î–µ—Ç—Å–∫–∞—è –∏–≥—Ä–æ–≤–∞—è –∫–æ–º–Ω–∞—Ç–∞",
      "–¢–∞–Ω—Ü–µ–≤–∞–ª—å–Ω—ã–µ –≤–µ—á–µ—Ä–∞",
    ],
  };

  const handleSubmit = () => {
    if (
      !selectedOption ||
      (selectedOption === "custom" && !customText.trim())
    ) {
      return;
    }

    setIsSubmitted(true);
    onSubmit?.(
      selectedOption,
      selectedOption === "custom" ? customText : undefined,
    );
  };

  const handleCustomTextChange = (
    e: React.ChangeEvent<HTMLTextAreaElement>,
  ) => {
    const text = e.target.value;
    if (text.length <= 250) {
      setCustomText(text);
    }
  };

  if (isSubmitted) {
    return (
      <Card className="w-full max-w-2xl mx-auto animate-fade-in">
        <CardContent className="p-8 text-center">
          <div className="text-6xl mb-4">üéâ</div>
          <h2 className="text-2xl font-semibold text-gray-800 mb-2">
            –°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ!
          </h2>
          <p className="text-gray-600 mb-4">
            –í–∞—à –æ—Ç–≤–µ—Ç —É—á—Ç—ë–Ω. –ú—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –≤—Å–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.
          </p>
          <Button
            onClick={() => setActiveTab("results")}
            variant="outline"
            className="mt-2"
          >
            –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
          </Button>
        </CardContent>
      </Card>
    );
  }

  return (
    <Card className="w-full max-w-2xl mx-auto shadow-lg hover:shadow-xl transition-shadow duration-300">
      <CardHeader className="pb-6">
        <CardTitle className="text-2xl font-semibold text-gray-800 leading-relaxed">
          –ï—Å–ª–∏ –±—ã –±—ã–ª –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π —Ü–µ–Ω—Ç—Ä –¥–æ—Å—É–≥–∞, —á—Ç–æ –±—ã –≤–∞—Å –ø—Ä–∏–≤–ª–µ–∫–ª–æ —Ç—É–¥–∞
          –ø–æ–π—Ç–∏?
        </CardTitle>
      </CardHeader>

      <CardContent>
        <Tabs value={activeTab} onValueChange={setActiveTab} className="w-full">
          <TabsList className="grid w-full grid-cols-2">
            <TabsTrigger value="vote">–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ</TabsTrigger>
            <TabsTrigger value="results">
              –†–µ–∑—É–ª—å—Ç–∞—Ç—ã ({surveyResults.totalVotes})
            </TabsTrigger>
          </TabsList>

          <TabsContent value="vote" className="space-y-6 mt-6">
            <RadioGroup
              value={selectedOption}
              onValueChange={setSelectedOption}
            >
              {options.map((option) => (
                <div
                  key={option.id}
                  className="flex items-center space-x-3 p-3 rounded-lg hover:bg-gray-50 transition-colors"
                >
                  <RadioGroupItem value={option.id} id={option.id} />
                  <label
                    htmlFor={option.id}
                    className="text-gray-700 cursor-pointer flex-1 font-medium"
                  >
                    {option.label}
                  </label>
                </div>
              ))}
            </RadioGroup>

            {selectedOption === "custom" && (
              <div className="space-y-2 animate-fade-in">
                <Textarea
                  placeholder="–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –≤–∞—Ä–∏–∞–Ω—Ç–æ–º..."
                  value={customText}
                  onChange={handleCustomTextChange}
                  className="min-h-[100px] resize-none"
                />
                <div className="flex justify-between items-center text-sm">
                  <span className="text-gray-500">–û–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–∞—Ä–∏–∞–Ω—Ç</span>
                  <span
                    className={`font-medium ${customText.length > 240 ? "text-red-500" : "text-gray-500"}`}
                  >
                    {customText.length}/250
                  </span>
                </div>
              </div>
            )}

            <Button
              onClick={handleSubmit}
              disabled={
                !selectedOption ||
                (selectedOption === "custom" && !customText.trim())
              }
              className="w-full py-3 text-lg font-medium bg-purple-600 hover:bg-purple-700 transition-colors"
            >
              –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç
            </Button>
          </TabsContent>

          <TabsContent value="results" className="space-y-6 mt-6">
            <div className="text-center mb-6">
              <p className="text-lg font-medium text-gray-700">
                –í—Å–µ–≥–æ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–æ:{" "}
                <span className="text-purple-600 font-bold">
                  {surveyResults.totalVotes}
                </span>{" "}
                —á–µ–ª–æ–≤–µ–∫
              </p>
            </div>

            <div className="space-y-4">
              {surveyResults.results.map((result) => (
                <div key={result.id} className="space-y-2">
                  <div className="flex justify-between items-center">
                    <span className="font-medium text-gray-700">
                      {result.label}
                    </span>
                    <div className="text-right">
                      <span className="text-lg font-bold text-purple-600">
                        {result.percentage}%
                      </span>
                      <span className="text-sm text-gray-500 ml-2">
                        ({result.votes} –≥–æ–ª–æ—Å–æ–≤)
                      </span>
                    </div>
                  </div>
                  <Progress value={result.percentage} className="h-3" />
                </div>
              ))}
            </div>

            <div className="mt-8 p-4 bg-gray-50 rounded-lg">
              <h3 className="font-semibold text-gray-800 mb-3">
                –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã ({surveyResults.customAnswers.length})
              </h3>
              <div className="space-y-2 max-h-60 overflow-y-auto">
                {surveyResults.customAnswers.map((answer, index) => (
                  <div key={index} className="flex items-start space-x-2">
                    <span className="text-purple-600 font-bold text-sm mt-0.5">
                      ‚Ä¢
                    </span>
                    <span className="text-gray-700 text-sm">{answer}</span>
                  </div>
                ))}
              </div>
            </div>
          </TabsContent>
        </Tabs>
      </CardContent>
    </Card>
  );
};

export default Survey;
